# Ordered list of groups
{{- $groups := keys $.Values.groups | uniq | sortAlpha }}
# We range on groups, and for each group we create a RBACDefinition
{{- range $groups }}
{{- $group := (get $.Values.groups .) }}
{{- $gcpGroupName := required "Group name is required." $group.gcpGroupName }}
{{- $roleName := required "Cluster Role name is required." $group.roleName }}
apiVersion: rbacmanager.reactiveops.io/v1beta1
kind: RBACDefinition
metadata:
  name: {{ $gcpGroupName }}
rbacBindings:
  - name: {{ $roleName }}
    subjects:
      - kind: Group
        name: {{ printf "%s@radicalbit.io" $gcpGroupName }}
{{- $namespaceLen := len ( $group.namespaces | default list ) }}
{{- $roleName := $group.roleName }}
{{- if or $group.clusterWide }}
    clusterRoleBindings:
      - clusterRole: {{ $roleName }}
{{- else }}
    roleBindings:
{{- if or (($group.labels).active) ( eq $namespaceLen 0 ) }}
      - clusterRole: {{ $group.roleName }}
        namespaceSelector:
          matchLabels:
            {{ toYaml $group.labels.selector }}
{{- else }}
    {{- range $namespace := $group.namespaces }}
      - clusterRole: {{ $group.roleName }}
        namespace: {{ $namespace }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}